# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Qt2.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import math
from PyQt5.QtWidgets import QMessageBox

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(370, 505)
        MainWindow.setStyleSheet("background-color: rgb(59, 59, 59);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(29, 0, 341, 61))
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(False)
        font.setWeight(50)
        self.label.setFont(font)
        self.label.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.label.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(59, 59, 59);")
        self.label.setObjectName("label")
        self.Sem = QtWidgets.QPushButton(self.centralwidget)
        self.Sem.setGeometry(QtCore.QRect(10, 210, 81, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.Sem.setFont(font)
        self.Sem.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Sem.setObjectName("Sem")
        self.Vosem = QtWidgets.QPushButton(self.centralwidget)
        self.Vosem.setGeometry(QtCore.QRect(100, 210, 81, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.Vosem.setFont(font)
        self.Vosem.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Vosem.setObjectName("Vosem")
        self.Minus = QtWidgets.QPushButton(self.centralwidget)
        self.Minus.setGeometry(QtCore.QRect(280, 210, 81, 51))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.Minus.setFont(font)
        self.Minus.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.Minus.setMouseTracking(True)
        self.Minus.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Minus.setObjectName("Minus")
        self.Devyat = QtWidgets.QPushButton(self.centralwidget)
        self.Devyat.setGeometry(QtCore.QRect(190, 210, 81, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.Devyat.setFont(font)
        self.Devyat.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Devyat.setObjectName("Devyat")
        self.Pyat = QtWidgets.QPushButton(self.centralwidget)
        self.Pyat.setGeometry(QtCore.QRect(100, 280, 81, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.Pyat.setFont(font)
        self.Pyat.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Pyat.setObjectName("Pyat")
        self.Plus = QtWidgets.QPushButton(self.centralwidget)
        self.Plus.setGeometry(QtCore.QRect(280, 280, 81, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.Plus.setFont(font)
        self.Plus.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Plus.setObjectName("Plus")
        self.Chetyre = QtWidgets.QPushButton(self.centralwidget)
        self.Chetyre.setGeometry(QtCore.QRect(10, 280, 81, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.Chetyre.setFont(font)
        self.Chetyre.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Chetyre.setObjectName("Chetyre")
        self.Shest = QtWidgets.QPushButton(self.centralwidget)
        self.Shest.setGeometry(QtCore.QRect(190, 280, 81, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.Shest.setFont(font)
        self.Shest.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Shest.setObjectName("Shest")
        self.Dva = QtWidgets.QPushButton(self.centralwidget)
        self.Dva.setGeometry(QtCore.QRect(100, 350, 81, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.Dva.setFont(font)
        self.Dva.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Dva.setObjectName("Dva")
        self.Odin = QtWidgets.QPushButton(self.centralwidget)
        self.Odin.setGeometry(QtCore.QRect(10, 350, 81, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.Odin.setFont(font)
        self.Odin.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Odin.setObjectName("Odin")
        self.Try = QtWidgets.QPushButton(self.centralwidget)
        self.Try.setGeometry(QtCore.QRect(190, 350, 81, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.Try.setFont(font)
        self.Try.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Try.setObjectName("Try")
        self.Nol = QtWidgets.QPushButton(self.centralwidget)
        self.Nol.setGeometry(QtCore.QRect(10, 420, 171, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.Nol.setFont(font)
        self.Nol.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Nol.setObjectName("Nol")
        self.Tochka = QtWidgets.QPushButton(self.centralwidget)
        self.Tochka.setGeometry(QtCore.QRect(190, 420, 81, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.Tochka.setFont(font)
        self.Tochka.setWhatsThis("")
        self.Tochka.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Tochka.setObjectName("Tochka")
        self.CEc = QtWidgets.QPushButton(self.centralwidget)
        self.CEc.setGeometry(QtCore.QRect(10, 70, 81, 51))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.CEc.setFont(font)
        self.CEc.setStyleSheet("background-color: rgb(180, 180, 180);\n"
"color: rgb(214, 0, 0);")
        self.CEc.setAutoDefault(False)
        self.CEc.setDefault(False)
        self.CEc.setFlat(False)
        self.CEc.setObjectName("CEc")
        self.Factor = QtWidgets.QPushButton(self.centralwidget)
        self.Factor.setGeometry(QtCore.QRect(190, 70, 81, 51))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.Factor.setFont(font)
        self.Factor.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Factor.setObjectName("Factor")
        self.Delenie = QtWidgets.QPushButton(self.centralwidget)
        self.Delenie.setGeometry(QtCore.QRect(280, 70, 81, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.Delenie.setFont(font)
        self.Delenie.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Delenie.setObjectName("Delenie")
        self.Umnojenie = QtWidgets.QPushButton(self.centralwidget)
        self.Umnojenie.setGeometry(QtCore.QRect(280, 140, 81, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.Umnojenie.setFont(font)
        self.Umnojenie.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Umnojenie.setObjectName("Umnojenie")
        self.Prozenty = QtWidgets.QPushButton(self.centralwidget)
        self.Prozenty.setGeometry(QtCore.QRect(10, 140, 81, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.Prozenty.setFont(font)
        self.Prozenty.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Prozenty.setObjectName("Prozenty")
        self.Kvadrat = QtWidgets.QPushButton(self.centralwidget)
        self.Kvadrat.setGeometry(QtCore.QRect(190, 140, 81, 51))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.Kvadrat.setFont(font)
        self.Kvadrat.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Kvadrat.setObjectName("Kvadrat")
        self.Coren = QtWidgets.QPushButton(self.centralwidget)
        self.Coren.setGeometry(QtCore.QRect(100, 140, 81, 51))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.Coren.setFont(font)
        self.Coren.setStyleSheet("background-color: rgb(180, 180, 180);")
        self.Coren.setObjectName("Coren")
        self.Delete = QtWidgets.QPushButton(self.centralwidget)
        self.Delete.setGeometry(QtCore.QRect(100, 70, 81, 51))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.Delete.setFont(font)
        self.Delete.setStyleSheet("background-color: rgb(180, 180, 180);\n"
"color: rgb(214, 0, 0);")
        self.Delete.setObjectName("Delete")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(280, 350, 81, 121))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: rgb(180, 180, 180);\n"
"color: rgb(0, 167, 27);")
        self.pushButton.setObjectName("pushButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.function1()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "CALLculator"))
        self.label.setText(_translate("MainWindow", "0"))
        self.Sem.setText(_translate("MainWindow", "7"))
        self.Vosem.setText(_translate("MainWindow", "8"))
        self.Minus.setText(_translate("MainWindow", "-"))
        self.Devyat.setText(_translate("MainWindow", "9"))
        self.Pyat.setText(_translate("MainWindow", "5"))
        self.Plus.setText(_translate("MainWindow", "+"))
        self.Chetyre.setText(_translate("MainWindow", "4"))
        self.Shest.setText(_translate("MainWindow", "6"))
        self.Dva.setText(_translate("MainWindow", "2"))
        self.Odin.setText(_translate("MainWindow", "1"))
        self.Try.setText(_translate("MainWindow", "3"))
        self.Nol.setText(_translate("MainWindow", "0"))
        self.Tochka.setText(_translate("MainWindow", "."))
        self.CEc.setText(_translate("MainWindow", "CE"))
        self.Factor.setText(_translate("MainWindow", "!x"))
        self.Delenie.setText(_translate("MainWindow", "/"))
        self.Umnojenie.setText(_translate("MainWindow", "*"))
        self.Prozenty.setText(_translate("MainWindow", "%"))
        self.Kvadrat.setText(_translate("MainWindow", "Kvadrat"))
        self.Coren.setText(_translate("MainWindow", "Coren\'"))
        self.Delete.setText(_translate("MainWindow", " Delete"))
        self.pushButton.setText(_translate("MainWindow", "="))

    def function1(self):
        self.Nol.clicked.connect(lambda: self.write_number(self.Nol.text()))
        self.Odin.clicked.connect(lambda: self.write_number(self.Odin.text()))
        self.Dva.clicked.connect(lambda: self.write_number(self.Dva.text()))
        self.Try.clicked.connect(lambda: self.write_number(self.Try.text()))
        self.Chetyre.clicked.connect(lambda: self.write_number(self.Chetyre.text()))
        self.Pyat.clicked.connect(lambda: self.write_number(self.Pyat.text()))
        self.Shest.clicked.connect(lambda: self.write_number(self.Shest.text()))
        self.Sem.clicked.connect(lambda: self.write_number(self.Sem.text()))
        self.Vosem.clicked.connect(lambda: self.write_number(self.Vosem.text()))
        self.Devyat.clicked.connect(lambda: self.write_number(self.Devyat.text()))

        self.Plus.clicked.connect(lambda: self.write_number(self.Plus.text()))
        self.Minus.clicked.connect(lambda: self.write_number(self.Minus.text()))
        self.Umnojenie.clicked.connect(lambda: self.write_number(self.Umnojenie.text()))
        self.Delenie.clicked.connect(lambda: self.write_number(self.Delenie.text()))
        self.Prozenty.clicked.connect(lambda: self.write_number(self.Prozenty.text()))
        

        self.CEc.clicked.connect(self.CEc_func)
        self.Delete.clicked.connect(self.Delete_func)
        self.Tochka.clicked.connect(self.Tochka_func)
        self.Coren.clicked.connect(self.Coren_func)
        self.Kvadrat.clicked.connect(self.Kvadrat_func)
        self.Factor.clicked.connect(self.Factor_func)


        self.pushButton.clicked.connect(self.results)

    def write_number(self, number):
        if self.label.text() == "0":
            self.label.setText(number)
        else:
            self.label.setText(self.label.text() + number)

    def Tochka_func(self):
        st1 = self.label.text()
        self.label.setText(st1 + ".")

    def Coren_func(self):
        X = eval(self.label.text())
        if X >= 0:
            X1 = math.sqrt(X)
            self.label.setText(str(X1))
        else:
            self.errors_func()

    def Kvadrat_func(self):
        X_ = eval(self.label.text())
        X1_ = X_ * X_
        self.label.setText(str(X1_))

    def results(self):
        st2 = self.label.text()
        if st2.find("%") == -1:
            res = eval(self.label.text())
            self.label.setText(str(res))
        else:
            if st2.find("+") != -1:
                i1 = 0
                i1f = st2.find("+")
                i1fn = i1f - 1 
                chisl1 = ''
                while i1fn  >= i1:
                    chisl1 = st2[i1fn] + chisl1
                    i1fn = i1fn-1
                i1_f = st2.find("%")
                i1fn = i1f + 1 
                i1_fn = i1_f -1
                chisl2 = ''
                while i1_fn >= i1fn:
                    chisl2 = st2[i1_fn] + chisl2
                    i1_fn = i1_fn - 1
                X2 = float(chisl1) + (float(chisl1) * (float(chisl2) / 100))
                self.label.setText(str(X2))


        if st2.find("%") == -1:
            res = eval(self.label.text())
            self.label.setText(str(res))
        else:
            if st2.find("-") != -1:
                _i1 = 0
                _i1f = st2.find("-")
                _i1fn = _i1f - 1 
                _chisl1 = ''
                while _i1fn  >= _i1:
                    _chisl1 = st2[_i1fn] + _chisl1
                    _i1fn = _i1fn-1
                _i1_f = st2.find("%")
                _i1fn = _i1f + 1 
                _i1_fn = _i1_f -1
                _chisl2 = ''
                while _i1_fn >= _i1fn:
                    _chisl2 = st2[_i1_fn] + _chisl2
                    _i1_fn = _i1_fn - 1
                X3 = float(_chisl1) - (float(_chisl1) * (float(_chisl2) / 100))
                self.label.setText(str(X3))



        if st2.find('/') == -1:
            res = eval(self.label.text())
            self.label.setText(str(res))
        else:
            st2_f = st2.find("/")
            st2_l = len(st2)
            if ((st2[st2_f + 1]  == '0') and (st2[st2_l-1]  == '0')) or ((st2[st2_f + 1]  == '0') and (st2[st2_l-1]  == '.')):
                self.errors_func()

    def CEc_func(self):
        self.label.setText("")

    def Delete_func(self):
        st = self.label.text()
        n = len(str(st))
        ListS = list(st)
        ListS.pop(n-1)
        st = "".join(ListS)
        self.label.setText(str(st))
        
    def Factor_func(self):
        st =  self.label.text()
        if st.find(".") != -1:
            self.errors_func()
        else:
            Y = eval(self.label.text())
            Y1 = math.factorial(Y)
            self.label.setText(str(Y1))

    def errors_func(self):
        self.label.setText("")
        error1 = QMessageBox()
        error1.setWindowTitle("Ошибка")
        error1.setText("                            Ты дурак?                               ")
        error1.setIcon(QMessageBox.Warning)
        error1.setStandardButtons(QMessageBox.Yes)
        error1.setDetailedText("Я не знаю, как это надо было сделать,\nно точно не так")

        error1.exec_()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
